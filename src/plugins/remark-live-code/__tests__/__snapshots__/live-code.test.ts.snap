// Vitest Snapshot v1

exports[`live code > +page.svelte 1`] = `
"<script context=\\"module\\">
	export const metadata = {\\"title\\":\\"Title\\"};
	const { title } = metadata;
</script>
<script>
  let count = 1
</script>


<h1>Heading</h1>
<div class=\\"admonition admonition-tip alert alert--success\\"><div class=\\"admonition-heading\\"><h5><span class=\\"admonition-icon\\"><svg
  xmlns=\\"http://www.w3.org/2000/svg\\"
  width=\\"12\\"
  height=\\"16\\"
  viewBox=\\"0 0 12 16\\"
><path
  fill-rule=\\"evenodd\\"
  d=\\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\\"
></path></svg></span>Tip</h5></div><div
  class=\\"admonition-content\\"
><p>Some tip content</p></div></div>
<div bg-white dark:bg-111111 mb-8 shadow-sm rounded-md>
{#await import('$live-code/LiveCode2040f1dde87.svelte')}
{:then Comp}
  <svelte:component this=\\"{Comp.default}\\"></svelte:component>
{:catch err}
  <div text-red-5>Live Code Error: {JSON.stringify(err)}</div>
{/await}<div
  reverse=\\"{true}\\"
  title=\\"Click to fold/expand code\\"
><pre class=\\"language-svelte\\">{@html \`<code class=\\"language-svelte\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>ts<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">
  <span class=\\"token keyword\\">let</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>
  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">add</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=></span> <span class=\\"token punctuation\\">&#123;</span>
    count<span class=\\"token operator\\">++</span>
  <span class=\\"token punctuation\\">&#125;</span>
</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">></span></span>

<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">type</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">\\"</span>button<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\"><span class=\\"token namespace\\">on:</span>click=</span><span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span>add<span class=\\"token punctuation\\">&#125;</span></span><span class=\\"token punctuation\\">></span></span>
  Count is <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span>count<span class=\\"token punctuation\\">&#125;</span></span>
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">></span></span>


<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span><span class=\\"token punctuation\\">></span></span><span class=\\"token style\\"><span class=\\"token language-css\\">
  <span class=\\"token selector\\">button</span> <span class=\\"token punctuation\\">&#123;</span>
    <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> purple<span class=\\"token punctuation\\">;</span>
  <span class=\\"token punctuation\\">&#125;</span>
</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">></span></span></code>\`}</pre></div></div>
"
`;

exports[`live code > tree.json 1`] = `
{
  "children": [
    {
      "position": Position {
        "end": {
          "column": 4,
          "line": 3,
          "offset": 20,
        },
        "indent": [
          1,
          1,
        ],
        "start": {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "yaml",
      "value": "title: Title",
    },
    {
      "position": Position {
        "end": {
          "column": 10,
          "line": 7,
          "offset": 56,
        },
        "indent": [
          1,
          1,
        ],
        "start": {
          "column": 1,
          "line": 5,
          "offset": 22,
        },
      },
      "type": "html",
      "value": "<script>
  let count = 1
</script>",
    },
    {
      "children": [
        {
          "position": Position {
            "end": {
              "column": 10,
              "line": 9,
              "offset": 67,
            },
            "indent": [],
            "start": {
              "column": 3,
              "line": 9,
              "offset": 60,
            },
          },
          "type": "text",
          "value": "Heading",
        },
      ],
      "depth": 1,
      "position": Position {
        "end": {
          "column": 10,
          "line": 9,
          "offset": 67,
        },
        "indent": [],
        "start": {
          "column": 1,
          "line": 9,
          "offset": 58,
        },
      },
      "type": "heading",
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [],
                          "data": {
                            "hName": "path",
                            "hProperties": {
                              "d": "M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z",
                              "fillRule": "evenodd",
                            },
                          },
                          "position": {
                            "end": {
                              "column": 566,
                              "line": 1,
                              "offset": 565,
                            },
                            "start": {
                              "column": 84,
                              "line": 1,
                              "offset": 83,
                            },
                          },
                          "type": "admonitionHTML",
                        },
                      ],
                      "data": {
                        "hName": "svg",
                        "hProperties": {
                          "height": "16",
                          "viewBox": "0 0 12 16",
                          "width": "12",
                          "xmlns": "http://www.w3.org/2000/svg",
                        },
                      },
                      "position": {
                        "end": {
                          "column": 572,
                          "line": 1,
                          "offset": 571,
                        },
                        "start": {
                          "column": 1,
                          "line": 1,
                          "offset": 0,
                        },
                      },
                      "type": "admonitionHTML",
                    },
                  ],
                  "data": {
                    "hName": "span",
                    "hProperties": {
                      "className": "admonition-icon",
                    },
                  },
                  "type": "admonitionHTML",
                },
                {
                  "position": Position {
                    "end": {
                      "column": 4,
                      "line": 11,
                      "offset": 72,
                    },
                    "indent": [],
                    "start": {
                      "column": 1,
                      "line": 11,
                      "offset": 69,
                    },
                  },
                  "type": "text",
                  "value": "Tip",
                },
              ],
              "data": {
                "hName": "h5",
                "hProperties": {},
              },
              "type": "admonitionHTML",
            },
          ],
          "data": {
            "hName": "div",
            "hProperties": {
              "className": "admonition-heading",
            },
          },
          "type": "admonitionHTML",
        },
        {
          "children": [
            {
              "children": [
                {
                  "position": Position {
                    "end": {
                      "column": 17,
                      "line": 11,
                      "offset": 85,
                    },
                    "indent": [],
                    "start": {
                      "column": 1,
                      "line": 11,
                      "offset": 69,
                    },
                  },
                  "type": "text",
                  "value": "Some tip content",
                },
              ],
              "position": Position {
                "end": {
                  "column": 17,
                  "line": 11,
                  "offset": 85,
                },
                "indent": [],
                "start": {
                  "column": 1,
                  "line": 11,
                  "offset": 69,
                },
              },
              "type": "paragraph",
            },
          ],
          "data": {
            "hName": "div",
            "hProperties": {
              "className": "admonition-content",
            },
          },
          "type": "admonitionHTML",
        },
      ],
      "data": {
        "hName": "div",
        "hProperties": {
          "className": [
            "admonition",
            "admonition-tip",
            "alert",
            "alert--success",
          ],
        },
      },
      "position": Position {
        "end": {
          "column": 4,
          "line": 13,
          "offset": 100,
        },
        "indent": [
          1,
          1,
        ],
        "start": {
          "column": 1,
          "line": 11,
          "offset": 69,
        },
      },
      "type": "admonitionHTML",
    },
    {
      "children": [
        {
          "type": "html",
          "value": "
{#await import('$live-code/LiveCode2040f1dde87.svelte')}
{:then Comp}
  <svelte:component this=\\"{Comp.default}\\"></svelte:component>
{:catch err}
  <div text-red-5>Live Code Error: {JSON.stringify(err)}</div>
{/await}",
        },
        {
          "children": [
            {
              "data": {
                "liveCodeResolved": true,
              },
              "lang": "svelte",
              "meta": "live",
              "position": Position {
                "end": {
                  "column": 4,
                  "line": 33,
                  "offset": 324,
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                ],
                "start": {
                  "column": 1,
                  "line": 15,
                  "offset": 102,
                },
              },
              "type": "code",
              "value": "<script lang=\\"ts\\">
  let count = 0
  const add = () => {
    count++
  }
</script>

<button type=\\"button\\" on:click={add}>
  Count is {count}
</button>


<style>
  button {
    color: purple;
  }
</style>",
            },
          ],
          "data": {
            "hName": "div",
            "hProperties": {
              "reverse": "{true}",
              "title": "Click to fold/expand code",
            },
          },
          "type": "liveCode",
        },
      ],
      "data": {
        "hName": "div",
        "hProperties": {
          "bg-white": "",
          "dark:bg-111111": "",
          "mb-8": "",
          "rounded-md": "",
          "shadow-sm": "",
        },
      },
      "type": "liveCode",
    },
  ],
  "position": {
    "end": {
      "column": 4,
      "line": 33,
      "offset": 324,
    },
    "start": {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;
